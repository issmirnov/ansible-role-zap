---
- name: Load distribution specific variables
  include_vars: "defaults/{{ ansible_os_family | lower }}.yml"
  tags:
    - zap_config

- name: Run OS specific tasks.
  include_tasks: "{{ ansible_os_family | lower }}.yml"

- name: read /proc/1/cgroup
  shell: cat /proc/1/cgroup
  changed_when: false
  register: cgroup_1

- name: detect if we are in docker
  changed_when: false
  set_fact:
    is_docker: "{{ cgroup_1.stdout.find('docker') != -1 }}"

# Need unsafe_writes for docker : https://github.com/moby/moby/issues/9295
- name: Write zap header to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    line: "### Zap Shortcuts ###"
    state: present
    insertafter: EOF
    unsafe_writes: "{{ is_docker }}"
  when: zap_config is defined
  become: yes
  tags: zap_dns


- name: add shortcuts to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '{{ zap_host }} {{ item }}$'
    line: "{{ zap_host }} {{ item }}"
    state: present
    insertafter: "### Zap Shortcuts ###"
    unsafe_writes: "{{ is_docker }}"
  when: zap_config is defined
  with_items: "{{ zap_config }}"
  become: yes
  tags: zap_dns
  notify:
    - "start zap {{ ansible_os_family|lower }}"

# NOTE: our keys get alphabetized, so 'expand' is lost in depths.
# This means if you want to manage config by hand, you're better off
# not using the {{ zap_config }} option
- name: Write zap config to {{ zap_config_location }}/c.yml
  copy:
    content: "{{ zap_config | to_nice_yaml(indent=2) }}"
    dest: "{{ zap_config_location }}/c.yml"
  when: zap_config is defined
  tags:
    - zap_config
  notify:
    - "restart zap {{ ansible_os_family|lower }}"

# convenience helper - if dnsmasq installed and on debian, attempt a reload
# if it's not running we ignore the error.
- name: Check if dnsmasq is installed
  when: ansible_os_family == 'Debian'
  command: dpkg-query -l dnsmasq
  register: dnsmasq_check
  changed_when: false
  failed_when: dnsmasq_check.rc != 1 and dnsmasq_check.rc != 0
  tags:
    - zap_dnsmasq

- name: Attempt reload of dnsmasq
  when: ansible_os_family == 'Debian' and dnsmasq_check.rc == 0
  service: name=dnsmasq state=reloaded
  ignore_errors: yes
  tags:
    - zap_dnsmasq
